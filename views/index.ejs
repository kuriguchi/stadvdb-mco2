<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Global Concurrency Control and Replication Simulation</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f0f0f0;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }
        .transaction {
            margin-bottom: 20px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            background-color: #f9f9f9;
        }
        .transaction h2 {
            margin-top: 0;
        }
        .transaction p {
            margin: 5px 0;
        }
        form {
            margin-bottom: 20px;
        }
        input[type="text"] {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border-radius: 4px;
            border: 1px solid #ccc;
        }
        input[type="submit"] {
            display: block;
            width: 100%;
            padding: 10px;
            font-size: 16px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Global Concurrency Control and Replication Simulation</h1>

        <!-- form to input apptid -->
        <form id="inputForm">
            <label for="apptid">Enter ApptID:</label>
            <input type="text" id="apptid" name="apptid" placeholder="Enter ApptID">
            <input type="submit" value="Submit">
        </form>

        <!-- display the result -->
        <div id="result"></div>

        <!-- delete and edit buttons -->
        <div id="buttonContainer" style="display: none;">
            <button id="editButton">Edit</button>
            <button id="deleteButton">Delete</button>
        </div>

        <!-- Button to toggle create form -->
        <button id="toggleCreateForm">Create New Appointment</button>

        <!-- form to input new appointment data -->
        <form id="createForm" class="create-form" style="display: none;">
            <label for="apptid">ApptID:</label>
            <input type="text" id="apptid" name="apptid" placeholder="Enter ApptID">
            <label for="timeQueued">Time Queued:</label>
            <input type="text" id="timeQueued" name="TimeQueued" placeholder="Enter Time Queued">
            <label for="queueDate">Queue Date:</label>
            <input type="text" id="queueDate" name="QueueDate" placeholder="Enter Queue Date">
            <label for="startTime">Start Time:</label>
            <input type="text" id="startTime" name="StartTime" placeholder="Enter Start Time">
            <label for="endTime">End Time:</label>
            <input type="text" id="endTime" name="EndTime" placeholder="Enter End Time">
            <label for="pxid">PxID:</label>
            <input type="text" id="pxid" name="pxid" placeholder="Enter PxID">
            <label for="age">Age:</label>
            <input type="text" id="age" name="age" placeholder="Enter Age">
            <label for="gender">Gender:</label>
            <input type="text" id="gender" name="gender" placeholder="Enter Gender">
            <label for="doctorid">Doctor ID:</label>
            <input type="text" id="doctorid" name="doctorid" placeholder="Enter Doctor ID">
            <label for="hospitalname">Hospital Name:</label>
            <input type="text" id="hospitalname" name="hospitalname" placeholder="Enter Hospital Name">
            <label for="city">City:</label>
            <input type="text" id="city" name="City" placeholder="Enter City">
            <label for="province">Province:</label>
            <input type="text" id="province" name="Province" placeholder="Enter Province">
            <label for="regionName">Region Name:</label>
            <input type="text" id="regionName" name="RegionName" placeholder="Enter Region Name">
            <input type="submit" value="Create">
        </form>
    </div>

    <script>
        //toggle visibility of create form
        document.getElementById("toggleCreateForm").addEventListener("click", function() {
            var createForm = document.getElementById("createForm");
            createForm.style.display = createForm.style.display === 'none' ? 'block' : 'none';
        });
        
        //CREATE new appointment
        document.getElementById("createForm").addEventListener("submit", function(event) {
            event.preventDefault();
            const formData = new FormData(this);
            const data = {};
            formData.forEach(function(value, key){
                data[key] = value;
            });

            // Send request to backend to create new appointment
            fetch(`/createOneAppt`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                console.log('New appointment created:', data);
                // Display the newly created appointment in the result div
                document.getElementById("result").innerHTML = `
                    <div class="transaction" id="transaction">
                        <h2>New Appointment</h2>
                        <!-- Display appointment details here -->
                    </div>
                `;
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });

        //GET/RETRIEVE based on entered apptID
        document.getElementById("inputForm").addEventListener("submit", function(event) {
            event.preventDefault();
            const apptid = document.getElementById("apptid").value;

            //send request to backend with the entered apptid
            fetch(`/getOneAppt?apptid=${apptid}`)
                .then(response => response.json())
                .then(data => {
                    //display the result in the 'result' div
                    document.getElementById("result").innerHTML = `
                        <div class="transaction" id="transaction">
                            <h2>Transaction</h2>
                            <p>ApptID: <span id="apptidSpan">${data.apptid}</span></p>
                            <p>TimeQueued: <span id="timeQueuedSpan">${data.TimeQueued}</span></p>
                            <p>QueueDate: <span id="queueDateSpan">${data.QueueDate}</span></p>
                            <p>StartTime: <span id="startTimeSpan">${data.StartTime}</span></p>
                            <p>EndTime: <span id="endTimeSpan">${data.EndTime}</span></p>
                            <p>pxid: <span id="pxidSpan">${data.pxid}</span></p>
                            <p>age: <span id="ageSpan">${data.age}</span></p>
                            <p>gender: <span id="genderSpan">${data.gender}</span></p>
                            <p>doctorid: <span id="doctoridSpan">${data.doctorid}</span></p>
                            <p>hospitalname: <span id="hospitalnameSpan">${data.hospitalname}</span></p>
                            <p>City: <span id="citySpan">${data.City}</span></p>
                            <p>Province: <span id="provinceSpan">${data.Province}</span></p>
                            <p>RegionName: <span id="regionNameSpan">${data.RegionName}</span></p>
                        </div>
                    `;

                    //display delete and edit buttons
                    document.getElementById("buttonContainer").style.display = "block";

                    //edit button
                    document.getElementById("editButton").addEventListener("click", function() {
                        //enable editing of the data
                        enableEditing();
                    });

                    //delete button
                    document.getElementById("deleteButton").addEventListener("click", function() {
                        //delete the data
                        deleteData(data.apptid);
                    });

                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });

        function enableEditing() {
            //enable editing of the data
            document.querySelectorAll('.transaction span').forEach(span => {
                span.contentEditable = true;
            });

            //listen for changes in the content of span elements
            document.querySelectorAll('.transaction span').forEach(span => {
                span.addEventListener('input', function() {
                    //send updated data to the server
                    updateData(span.id, span.innerText);
                });
            });
        }

        function updateData(field, value) {
            const apptid = document.getElementById('apptidSpan').innerText; //apptid is not editable
            const data = { apptid, field, value }; //construct object with updated field

            //send updated data to the server
            fetch(`/updateOneAppt`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to update data');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }

        function deleteData(apptid) {
            //send delete request to the server
            console.log('APPTID: ', apptid);
            fetch(`http://localhost:3000/deleteOneAppt?apptid=${apptid}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to delete data');
                    }
                    //clear result div after deletion
                    document.getElementById("result").innerHTML = '';
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    </script>
</body>
</html>
